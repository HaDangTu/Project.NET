@model MotelManagement.ViewModels.InvoiceViewModel

@{
    ViewBag.Title = "CollectPowerInvoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Thu tiền điện nước</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>
        <h5>@Model.RoomName</h5>
        <div>
            @Html.EditorFor(model => model.RoomID,
            new { htmlAttributes = new { @hidden="hidden" } } )
            @Html.EditorFor(model => model.RoomName,
                 new { htmlAttributes = new { @hidden="hidden" } } )
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-row">
            <div class="col-1">
                @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "font-weight-bold" })
            </div>
            <div class="col-1" id="from-date">
                <span id="from-date-text">
                    @Model.FromDate.ToString("dd-MM-yyyy")
                </span>
                @Html.EditorFor(model => model.FromDate,
               new { htmlAttributes = new { @id = "from-date", @hidden="hidden" } } )
            </div>
            <div class="col-1"></div>
            <div class="col-1">
                @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "font-weight-bold" })
            </div>
            <div class="col-1">
                <span id="to-date-text">
                    @Model.ToDate.ToString("dd-MM-yyyy")
                </span>
                @Html.EditorFor(model => model.ToDate,
               new { htmlAttributes = new { @id = "to-date", @hidden = "hidden" } } )
            </div>
        </div>

        <div class="form-row mt-2">
            @Html.LabelFor(model => model.CollectionDate, htmlAttributes: new { @class = "font-weight-bold col-2" })
            <div class="col-4">
                @Html.EditorFor(model => model.CollectionDate, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <h5 class="mt-3">Thông tin điện</h5>
        <div class="form-row">
            @Html.LabelFor(model => model.ElectricOldIndicator, htmlAttributes:
                new { @class = "font-weight-bold col-1" })
            <div class="col-1">
                <span id="old-el-text">
                    @Model.ElectricOldIndicator
                </span>
                @Html.EditorFor(model => model.ElectricOldIndicator,
               new { htmlAttributes = new { @id = "old-el", @hidden = "hidden" } } )
            </div>
            <div class="col-1">

            </div>
            @Html.LabelFor(model => model.ElectricNewIndicator, htmlAttributes:
                new { @class = "font-weight-bold col-1" })
            <div class="col-1">
                <span id="new-el-text">
                    @Model.ElectricNewIndicator
                </span>
                @Html.EditorFor(model => model.ElectricNewIndicator,
               new { htmlAttributes = new { @id = "new-el", @hidden = "hidden" } } )
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.SumElectricUsage,
        htmlAttributes: new { @class = "font-weight-bold col-3" })
            <div class="col-1">
                <p>
                    <span id="sum-el-text">
                        @Model.SumElectricUsage
                    </span> Kwh
                </p>
                @Html.EditorFor(model => model.SumElectricUsage,
               new { htmlAttributes = new { @id = "sum-el-usage", @hidden = "hidden" } } )
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.ElectricMoney,
        htmlAttributes: new { @class = "font-weight-bold col-3 text-danger" })
            <div class="col-3">
                <p class="text-danger">
                    <span id="el-money-text">
                        @Model.ElectricMoney
                    </span> VND
                </p>
                @Html.EditorFor(model => model.ElectricMoney,
               new { htmlAttributes = new { @id = "el-money", @hidden = "hidden", @class="text-danger" } } )
            </div>
        </div>

        <h5 class="mt-3">Thông tin nước</h5>
        <div class="form-row">
            @Html.LabelFor(model => model.WaterOldIndicator, htmlAttributes:
        new { @class = "font-weight-bold col-1" })
            <div class="col-1">
                <span id="old-water-text">
                    @Model.WaterOldIndicator
                </span>
                @Html.EditorFor(model => model.WaterOldIndicator,
               new { htmlAttributes = new { @id = "old-water", @hidden = "hidden" } } )
            </div>
            <div class="col-1">

            </div>
            @Html.LabelFor(model => model.WaterNewIndicator, htmlAttributes:
       new { @class = "font-weight-bold col-1" })
            <div class="col-1">
                <span id="new-water-text">
                    @Model.WaterNewIndicator
                </span>
                @Html.EditorFor(model => model.WaterNewIndicator,
               new { htmlAttributes = new { @id = "new-water", @hidden = "hidden" } } )
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.SumWaterUsage,
        htmlAttributes: new { @class = "font-weight-bold col-3" })
            <div class="col-1">
                <p>
                    <span id="sum-water-text">
                        @Model.SumWaterUsage
                    </span> m3
                </p>
                @Html.EditorFor(model => model.SumWaterUsage,
               new { htmlAttributes = new { @id = "sum-water-usage", @hidden = "hidden" } } )
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.WaterMoney,
        htmlAttributes: new { @class = "font-weight-bold col-3 text-danger" })
            <div class="col-3">
                <p class="text-danger">
                    <span id="water-money-text">
                        @Model.WaterMoney
                    </span> VND
                </p>
                @Html.EditorFor(model => model.WaterMoney,
               new { htmlAttributes = new { @id = "water-money", @hidden = "hidden" } } )
            </div>
        </div>

        <div class="form-row mt-4">
            @Html.LabelFor(model => model.Debt,
             htmlAttributes: new { @class = "font-weight-bold col-2 text-danger" })
            <div class="col-2">
                <p class="text-danger">
                    <span id="debt-text">
                        @Model.Debt
                    </span> VND
                </p>
                @Html.EditorFor(model => model.Debt,
               new { htmlAttributes = new { @id = "debt", @hidden = "hidden" } } )
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.Proceeds,
             htmlAttributes: new { @class = "font-weight-bold col-2" })
            <div class="col-3">
                @Html.EditorFor(model => model.Proceeds,
                    new { htmlAttributes = new { @class = "form-control", @id = "proceeds" } })
                @Html.ValidationMessageFor(model => model.Proceeds, "",
               htmlAttributes: new { @class= "text-danger"})
            </div>
        </div>

        <div class="form-row mt-2">
            @Html.LabelFor(model => model.ExcessCash,
                htmlAttributes: new { @class = "font-weight-bold col-2"} )
            <div class="col-2">
                <p class="text-success">
                    <span id="excess-cash-text">
                        @Model.ExcessCash
                    </span> VND
                </p>
                @Html.EditorFor(model => model.ExcessCash,
               new { htmlAttributes = new { @id = "excess-cash", @hidden = "hidden" } } )
            </div>
        </div>

        <div class="form-group">
            <input type="submit" class="btn btn-primary" value="Xuất hóa đơn" />
        </div>
    </div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $("document").ready(function () {
            
            $("#proceeds").keyup(function (e) {
                var value = $(e.target).val();

                value = value.replace(/[A-Za-z]|[!#$%^&*(),.?":{}|<>]/g, "");
                if (value == "") value = "0";

                var money = parseInt(value);
                var debt = parseInt(@Model.Debt.Replace(",", ""));
                
                debt = debt - money;

                $("#proceeds").val(money.toLocaleString("en-US"));
                $("#debt").val(debt < 0 ? "0" : debt.toLocaleString("en-US"));
                $("#debt-text").text(debt < 0 ? "0" : debt.toLocaleString("en-US"));
                $("#excess-cash").val(debt < 0 ? (-debt).toLocaleString("en-US") : "0");
                $("#excess-cash-text").text(debt < 0 ? (-debt).toLocaleString("en-US") : "0");
            });

            setTimeout(function () {
                $(".close").click();
            }, 10000);
        });


    </script>
}
