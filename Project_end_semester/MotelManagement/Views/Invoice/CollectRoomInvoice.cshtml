@model MotelManagement.ViewModels.InvoiceViewModel
@using MotelManagement.Utility;
@{
    ViewBag.Title = "CollectRoomInvoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Thu tiền phòng</h2>
@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <strong>Success!</strong> @TempData["Success"]
    </div>
}
else if (TempData["Fail"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <strong>Fail!</strong> @TempData["Fail"]
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>InvoiceViewModel</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.RoomID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RoomID, new SelectList(Model.Rooms, "ID", "Name", 1),
                     htmlAttributes: new {@id="room-select", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RoomID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromDate,
               new { htmlAttributes = new { @class = "form-control", @id = "from-date" } })
                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @type = "date", @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ToDate,
               new { htmlAttributes = new {@class = "form-control", @id = "to-date" } })
                @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CollectionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CollectionDate, "{0:dd-MM-yyyy}",
               new { htmlAttributes = new {@class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CollectionDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Debt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Debt,
               new { htmlAttributes = new { @class = "form-control", @id="debt" } })
                @Html.ValidationMessageFor(model => model.Debt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Proceeds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Proceeds,
               new { htmlAttributes = new { @class = "form-control", @id="proceeds" } })
                @Html.ValidationMessageFor(model => model.Proceeds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExcessCash, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExcessCash,
               new { htmlAttributes = new { @class = "form-control", @id="excess-cash" } })
                @Html.ValidationMessageFor(model => model.ExcessCash, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Xuất hóa đơn" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $("document").ready(function () {
            $("#room-select").change(function (e) {
                var select = $(e.target);
                $.post("/Invoice/GetRoomDebtInfo", { id: select.val() })
                    .done(function (data) {
                        //console.log(data);
                        $("#from-date").val(data.FromDate);
                        $("#to-date").val(data.ToDate);
                        $("#debt").val(data.Debt);
                    })
                    .fail(function () {
                        console.log("something wrong");
                    });
            });


            //$("#proceeds").change(function (e) {
            //    var moneyStr = $(e.target).val();

            //    var money = parseInt(moneyStr.replace(/,/g, ""));
                

                
            //});

            $("#proceeds").keyup(function (e) {
                var value = $(e.target).val();

                value = value.replace(/[A-Za-z]|[!#$%^&*(),.?":{}|<>]/g, "");
                if (value == "") value = "0";

                var money = parseInt(value);
                var debt = parseInt(@Model.Debt.Replace(",", ""));

                debt = debt - money;

                $("#proceeds").val(money.toLocaleString("en-US"));
                $("#debt").val(debt < 0 ? "0" : debt.toLocaleString("en-US"));
                $("#excess-cash").val(debt < 0 ? (-debt).toLocaleString("en-US") : "0");
            })
        });

        $("document").ready(function () {

            setTimeout(function () {
                $(".close").click();
            }, 10000);
        });
    </script>
}
